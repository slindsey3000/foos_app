<div class="clubs-page">
  <div class="container">
    <div class="page-header">
      <h1>Where to Play Foosball</h1>
      <p>Find foosball clubs and locations near you</p>
    </div>

    <div class="state-search">
      <%= form_with url: clubs_path, method: :get, local: true, class: "state-search-form" do |f| %>
        <div class="search-input-group">
          <%= f.text_field :state, value: @search_query, 
                          placeholder: "Enter state name (e.g., California or CA)", 
                          class: "state-search-input", 
                          autocomplete: "off" %>
          <%= f.submit "Find Clubs", class: "btn btn-primary search-btn" %>
          <% if @search_query.present? %>
            <%= link_to "Clear", clubs_path, class: "btn btn-outline clear-btn" %>
          <% end %>
        </div>
        <div class="state-suggestions" id="state-suggestions"></div>
      <% end %>
      
      <% if @search_message.present? %>
        <div class="search-message">
          <%= @search_message %>
        </div>
      <% end %>
    </div>

    <% if current_user&.admin? %>
      <div class="admin-actions">
        <%= link_to "Add New Club", new_club_path, class: "btn btn-primary" %>
      </div>
    <% end %>

    <div class="clubs-grid">
      <% if @clubs.any? %>
        <% @clubs.each do |club| %>
          <div class="club-card">
            <div class="club-image">
              <% if club.image_url.present? %>
                <%= image_tag club.image_url, alt: club.name %>
              <% else %>
                <div class="club-placeholder">
                  <div class="placeholder-content">
                    <div class="placeholder-icon">üìç</div>
                  </div>
                </div>
              <% end %>
            </div>
            
            <div class="club-content">
              <h3 class="club-title">
                <%= link_to club.name, club_path(club) %>
              </h3>
              
              <div class="club-location">
                <p class="club-address"><%= club.full_address %></p>
              </div>
              
              <% if club.day_and_time_info.present? %>
                <div class="club-schedule">
                  <h4>Playing Times</h4>
                  <p><%= club.day_and_time_info %></p>
                </div>
              <% end %>
              
              <% if club.description.present? %>
                <p class="club-description"><%= truncate(club.description, length: 150) %></p>
              <% end %>
              
              <div class="club-contact">
                <% if club.phone.present? %>
                  <p class="club-phone">üìû <%= club.phone %></p>
                <% end %>
                <% if club.email.present? %>
                  <p class="club-email">‚úâÔ∏è <%= club.email %></p>
                <% end %>
                <% if club.website.present? %>
                  <p class="club-website">üåê <a href="<%= club.website %>" target="_blank">Visit Website</a></p>
                <% end %>
              </div>
              
              <div class="club-actions">
                <% if club.google_maps_url %>
                  <a href="<%= club.google_maps_url %>" target="_blank" class="btn btn-sm btn-outline">
                    üìç Get Directions
                  </a>
                <% end %>
                
                <% if current_user&.admin? %>
                  <%= link_to "Edit", edit_club_path(club), class: "btn btn-sm btn-secondary" %>
                  <%= link_to "Delete", club_path(club), 
                      method: :delete, 
                      data: { confirm: "Are you sure you want to delete this club?" }, 
                      class: "btn btn-sm btn-danger" %>
                <% end %>
              </div>
            </div>
          </div>
        <% end %>
      <% else %>
        <div class="empty-state">
          <h3>No Clubs Found</h3>
          <p>Foosball clubs and locations will be added here soon.</p>
          <% if current_user&.admin? %>
            <p><%= link_to "Add the first club", new_club_path, class: "btn btn-primary" %></p>
          <% end %>
        </div>
      <% end %>
    </div>
    
    <% if @has_more %>
      <div class="load-more-section">
        <% if @search_query.present? %>
          <%= link_to "Load More Clubs", clubs_path(state: @search_query, page: (@current_page + 1)), 
                      class: "btn btn-outline btn-large load-more-btn" %>
        <% else %>
          <%= link_to "Load More Clubs", clubs_path(page: (@current_page + 1)), 
                      class: "btn btn-outline btn-large load-more-btn" %>
        <% end %>
      </div>
    <% end %>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    initializeStateSearch();
    setupLoadMoreButtons();
  });

  function initializeStateSearch() {
    const stateNames = <%= StateHelper::STATES.keys.sort.to_json.html_safe %>;
    
    const input = document.querySelector('.state-search-input');
    const suggestionsContainer = document.getElementById('state-suggestions');
    let currentFocus = -1;
    
    if (!input || !suggestionsContainer) return;
    
    function handleInputChange() {
      console.log('Input changed, value:', input.value); // Debug log
      const value = input.value.trim();
      closeSuggestions();
      currentFocus = -1;
      
      if (value.length < 1) {
        console.log('Value too short, returning'); // Debug log
        return;
      }
      
      const matches = stateNames.filter(state => 
        state.toLowerCase().startsWith(value.toLowerCase())
      ).slice(0, 8);
      
      console.log('Found matches:', matches); // Debug log
      
      if (matches.length > 0) {
        const dropdown = document.createElement('div');
        dropdown.className = 'suggestions-dropdown';
        
        matches.forEach((match, index) => {
          const item = document.createElement('div');
          item.className = 'suggestion-item';
          item.textContent = match;
          item.addEventListener('click', function() {
            input.value = match;
            closeSuggestions();
          });
          dropdown.appendChild(item);
        });
        
        suggestionsContainer.appendChild(dropdown);
      }
    }
    
    function setActive(suggestions) {
      suggestions.forEach((item, index) => {
        item.classList.toggle('highlighted', index === currentFocus);
      });
    }
    
    function closeSuggestions() {
      if (suggestionsContainer) {
        suggestionsContainer.innerHTML = '';
      }
      currentFocus = -1;
    }
    
    // Handle all input events
    input.addEventListener('input', handleInputChange);
    input.addEventListener('keyup', handleInputChange);
    input.addEventListener('paste', function() {
      setTimeout(handleInputChange, 10);
    });
    input.addEventListener('cut', function() {
      setTimeout(handleInputChange, 10);
    });
    
    input.addEventListener('keydown', function(e) {
      const suggestions = suggestionsContainer.querySelectorAll('.suggestion-item');
      
      if (e.key === 'ArrowDown') {
        e.preventDefault();
        currentFocus++;
        if (currentFocus >= suggestions.length) currentFocus = 0;
        setActive(suggestions);
      } else if (e.key === 'ArrowUp') {
        e.preventDefault();
        currentFocus--;
        if (currentFocus < 0) currentFocus = suggestions.length - 1;
        setActive(suggestions);
      } else if (e.key === 'Enter') {
        if (currentFocus > -1 && suggestions[currentFocus]) {
          e.preventDefault();
          suggestions[currentFocus].click();
        }
      } else if (e.key === 'Escape') {
        closeSuggestions();
      }
    });
    
    // Close suggestions when clicking outside
    document.addEventListener('click', function(e) {
      if (!input.contains(e.target) && !suggestionsContainer.contains(e.target)) {
        closeSuggestions();
      }
    });
  }

  function setupLoadMoreButtons() {
    // Handle load more button clicks
    document.addEventListener('click', function(e) {
      if (e.target.classList.contains('load-more-btn')) {
        e.preventDefault();
        const btn = e.target;
        const originalText = btn.textContent;
        
        btn.textContent = 'Loading...';
        btn.disabled = true;
        
        fetch(btn.href)
          .then(response => response.text())
          .then(html => {
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, 'text/html');
            const newClubs = doc.querySelectorAll('.club-card');
            const clubsGrid = document.querySelector('.clubs-grid');
            
            // Append new clubs
            newClubs.forEach(club => {
              clubsGrid.appendChild(club);
            });
            
            // Update load more button
            const newLoadMoreSection = doc.querySelector('.load-more-section');
            const currentLoadMoreSection = document.querySelector('.load-more-section');
            
            if (newLoadMoreSection) {
              currentLoadMoreSection.innerHTML = newLoadMoreSection.innerHTML;
            } else {
              currentLoadMoreSection.remove();
            }
          })
          .catch(error => {
            console.error('Error loading more clubs:', error);
            btn.textContent = originalText;
            btn.disabled = false;
          });
      }
    });
  }
</script>
